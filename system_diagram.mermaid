graph TB
    Start([User Runs Script]) --> LoadEnv[Load .env Configuration]
    LoadEnv --> CheckConfig{Valid Config?}
    CheckConfig -->|No| CreateEnv[Create Template .env]
    CreateEnv --> Exit1([Exit: Edit .env])
    CheckConfig -->|Yes| InitGemini[Initialize Gemini API]
    
    InitGemini --> LoadContext{Use Repomix?}
    LoadContext -->|Yes| ReadRepomix[Read repomix-output.txt]
    LoadContext -->|No| ScanDir[Scan Project Directory]
    
    ReadRepomix --> Context[Project Context]
    ScanDir --> Context
    
    Context --> Phase1[Phase 1: Create Plan]
    Phase1 --> GeminiPlan[Gemini API: Generate Structure]
    GeminiPlan --> DocPlan[Documentation Plan<br/>9 Sections]
    
    DocPlan --> Phase2[Phase 2: Generate Content]
    Phase2 --> Loop{For Each Section}
    
    Loop --> GeminiContent[Gemini API: Generate Content]
    GeminiContent --> Screenshots{Screenshots<br/>Enabled?}
    
    Screenshots -->|Yes| CaptureCode[Selenium: Capture Code Files]
    Screenshots -->|No| NextSection
    CaptureCode --> CaptureTree[Selenium: Directory Structure]
    CaptureTree --> NextSection{More Sections?}
    
    NextSection -->|Yes| Loop
    NextSection -->|No| LiveApp{Live App<br/>Enabled?}
    
    LiveApp -->|Yes| StartApp[Ensure App Running]
    StartApp --> CaptureLive[Selenium: Capture URLs]
    CaptureLive --> Phase3
    LiveApp -->|No| Phase3[Phase 3: Assemble Document]
    
    Phase3 --> CreateDoc[python-docx: Create .docx]
    CreateDoc --> AddTitle[Add Title Page]
    AddTitle --> AddSections[Add All Sections]
    AddSections --> AddImages[Insert Screenshots]
    AddImages --> AddCode[Add Code Blocks]
    AddCode --> SaveDoc[Save to Output Directory]
    
    SaveDoc --> Done([âœ… Documentation Ready!])
    
    style Start fill:#4CAF50,color:#fff
    style Done fill:#4CAF50,color:#fff
    style Exit1 fill:#FF9800,color:#fff